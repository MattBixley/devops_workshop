---
title: "Day 2"
---

[Workshop Git Repo](https://posit-conf-2023.github.io/devops/)

## **Materials**

-   [Lab 2](https://posit-conf-2023.github.io/devops/coursework_labs/02_lab_docker/Exercises.html) - **Docker**

    -   Part 1: [Run](https://docs.docker.com/engine/reference/run/) Commands
    -   Part 2: Debugging Containers
    -   Part 3: Mapping Ports
    -   Part 4: Mounting Data
    -   Part 5: Building images interactively
    -   Part 6: Building Shiny Server OS with Dockerfile

-   [Lab 3](https://posit-conf-2023.github.io/devops/coursework_labs/03_lab_data_in_prod/lab_solution.html) - **Data in Production**

    -   Part 1: Host API on Posit Connect
    -   Part 2: Explore your API
    -   Part 3: Plumber Examples
    -   Part 4: Push-button deployment
    -   Part 5: Programmatically access Connect

Graduated - DevOps expert\
mattbixley/[ubuntu_bixley]{.underline}\
I made a docker image, I think it has a shiny app in it, need a pay rise\

```{r quietly = T, warning=F, message=F}
library(shiny)

# Define UI for application that draws a histogram
ui <- fluidPage(

    # Application title
    titlePanel("Old Faithful Geyser Data"),

    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
            sliderInput("bins",
                        "Number of bins:",
                        min = 1,
                        max = 50,
                        value = 30)
        ),

        # Show a plot of the generated distribution
        mainPanel(
           plotOutput("distPlot")
        )
    )
)

# Define server logic required to draw a histogram
server <- function(input, output) {

    output$distPlot <- renderPlot({
        # generate bins based on input$bins from ui.R
        x    <- faithful[, 2]
        bins <- seq(min(x), max(x), length.out = input$bins + 1)

        # draw the histogram with the specified number of bins
        hist(x, breaks = bins, col = 'darkgray', border = 'white',
             xlab = 'Waiting time to next eruption (in mins)',
             main = 'Histogram of waiting times')
    })
}

# Run the application 
shinyApp(ui = ui, server = server)
```
